/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  AccountsBooks as PrismaAccountsBooks,
  Accounts as PrismaAccounts,
  Books as PrismaBooks,
} from "@prisma/client";

export class AccountsBooksServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AccountsBooksCountArgs, "select">
  ): Promise<number> {
    return this.prisma.accountsBooks.count(args);
  }

  async accountsBooksItems(
    args: Prisma.AccountsBooksFindManyArgs
  ): Promise<PrismaAccountsBooks[]> {
    return this.prisma.accountsBooks.findMany(args);
  }
  async accountsBooks(
    args: Prisma.AccountsBooksFindUniqueArgs
  ): Promise<PrismaAccountsBooks | null> {
    return this.prisma.accountsBooks.findUnique(args);
  }
  async createAccountsBooks(
    args: Prisma.AccountsBooksCreateArgs
  ): Promise<PrismaAccountsBooks> {
    return this.prisma.accountsBooks.create(args);
  }
  async updateAccountsBooks(
    args: Prisma.AccountsBooksUpdateArgs
  ): Promise<PrismaAccountsBooks> {
    return this.prisma.accountsBooks.update(args);
  }
  async deleteAccountsBooks(
    args: Prisma.AccountsBooksDeleteArgs
  ): Promise<PrismaAccountsBooks> {
    return this.prisma.accountsBooks.delete(args);
  }

  async getAccount(parentId: string): Promise<PrismaAccounts | null> {
    return this.prisma.accountsBooks
      .findUnique({
        where: { id: parentId },
      })
      .account();
  }

  async getBook(parentId: string): Promise<PrismaBooks | null> {
    return this.prisma.accountsBooks
      .findUnique({
        where: { id: parentId },
      })
      .book();
  }
}
