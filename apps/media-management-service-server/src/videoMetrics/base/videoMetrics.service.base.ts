/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  VideoMetrics as PrismaVideoMetrics,
  Orders as PrismaOrders,
} from "@prisma/client";

export class VideoMetricsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VideoMetricsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.videoMetrics.count(args);
  }

  async videoMetricsItems(
    args: Prisma.VideoMetricsFindManyArgs
  ): Promise<PrismaVideoMetrics[]> {
    return this.prisma.videoMetrics.findMany(args);
  }
  async videoMetrics(
    args: Prisma.VideoMetricsFindUniqueArgs
  ): Promise<PrismaVideoMetrics | null> {
    return this.prisma.videoMetrics.findUnique(args);
  }
  async createVideoMetrics(
    args: Prisma.VideoMetricsCreateArgs
  ): Promise<PrismaVideoMetrics> {
    return this.prisma.videoMetrics.create(args);
  }
  async updateVideoMetrics(
    args: Prisma.VideoMetricsUpdateArgs
  ): Promise<PrismaVideoMetrics> {
    return this.prisma.videoMetrics.update(args);
  }
  async deleteVideoMetrics(
    args: Prisma.VideoMetricsDeleteArgs
  ): Promise<PrismaVideoMetrics> {
    return this.prisma.videoMetrics.delete(args);
  }

  async getOrder(parentId: string): Promise<PrismaOrders | null> {
    return this.prisma.videoMetrics
      .findUnique({
        where: { id: parentId },
      })
      .order();
  }
}
