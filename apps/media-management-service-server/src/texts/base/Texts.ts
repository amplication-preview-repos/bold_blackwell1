/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Books } from "../../books/base/Books";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { Captions } from "../../captions/base/Captions";
import { Orders } from "../../orders/base/Orders";
import { TextsHashtags } from "../../textsHashtags/base/TextsHashtags";
import { TextsLabels } from "../../textsLabels/base/TextsLabels";

@ObjectType()
class Texts {
  @ApiProperty({
    required: false,
    type: () => Books,
  })
  @ValidateNested()
  @Type(() => Books)
  @IsOptional()
  book?: Books | null;

  @ApiProperty({
    required: false,
    type: () => [Captions],
  })
  @ValidateNested()
  @Type(() => Captions)
  @IsOptional()
  captionsItems?: Array<Captions>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Orders],
  })
  @ValidateNested()
  @Type(() => Orders)
  @IsOptional()
  ordersItems?: Array<Orders>;

  @ApiProperty({
    required: false,
    type: () => [TextsHashtags],
  })
  @ValidateNested()
  @Type(() => TextsHashtags)
  @IsOptional()
  textsHashtagsItems?: Array<TextsHashtags>;

  @ApiProperty({
    required: false,
    type: () => [TextsLabels],
  })
  @ValidateNested()
  @Type(() => TextsLabels)
  @IsOptional()
  textsLabelsItems?: Array<TextsLabels>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Texts as Texts };
